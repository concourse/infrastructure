$ErrorActionPreference = "Stop"
trap { $host.SetShouldExit(1) }

$ProgressPreference="SilentlyContinue"

cd C:\

& {
# install StackDriver monitoring agent so we can get memory and disk metrics in
# the GCP console
Invoke-WebRequest -Uri https://repo.stackdriver.com/windows/StackdriverMonitoring-GCM-46.exe -OutFile StackDriverMonitoring.exe
if (Test-Path .\MonitoringAgent\uninstall.exe) {
   Start-Process -FilePath .\MonitoringAgent\uninstall.exe -ArgumentList "/S" -Wait -PassThru
}
Start-Process -FilePath ./StackDriverMonitoring.exe -ArgumentList "/S /D=C:\MonitoringAgent" -Wait -PassThru
rm StackDriverMonitoring.exe

# install Go
Invoke-WebRequest -Uri https://golang.org/dl/go1.15.5.windows-amd64.msi -OutFile go.msi
Start-Process -FilePath ./go.msi -ArgumentList "/passive /norestart" -Wait -PassThru
rm go.msi

# install Chocolatey
Set-ExecutionPolicy Bypass -Scope Process -Force
[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

# set up Chocolatey 'refreshenv'
Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"

# install dependencies
choco install --no-progress -r -y git mingw nssm

# refresh $env:Path so Windows tasks don't have to set it themselves
refreshenv

# install Concourse
Invoke-WebRequest -Uri ${concourse_bundle_url} -OutFile concourse.zip
Expand-Archive -LiteralPath concourse.zip -DestinationPath . -Force

@'
${tsa_host_public_key}
'@ | Out-File -Encoding ASCII .\tsa-host-public-key

@'
${worker_key}
'@ | Out-File -Encoding ASCII .\worker-key

# start Concourse as a service via nssm
nssm install Concourse C:\concourse\bin\concourse.exe
nssm set Concourse AppParameters worker `
  /work-dir .\work `
  /tsa-host ${tsa_host} `
  /tsa-public-key .\tsa-host-public-key `
  /tsa-worker-private-key .\worker-key `
  /team main
nssm set Concourse AppDirectory C:\
nssm set Concourse AppStdout C:\concourse.stdout.log
nssm set Concourse AppStderr C:\concourse.stderr.log
nssm start Concourse
} *> C:/startup.log
